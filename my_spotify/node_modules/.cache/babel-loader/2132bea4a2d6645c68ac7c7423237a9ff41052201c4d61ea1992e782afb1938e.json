{"ast":null,"code":"var _jsxFileName = \"/Users/mayabenziada/Home/spotify/src/components/ArtistList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Artist from './Artist.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArtistList() {\n  _s();\n  const [artist_list, setArtistList] = useState([]);\n  const [page, setPage] = useState(1);\n  function prevPage() {\n    if (page === 1) {\n      return;\n    }\n    setPage(page - 1);\n  }\n  function nextPage() {\n    setPage(page + 1);\n  }\n  useEffect(() => {\n    fetch(`http://localhost:8000/artists?page=${page}&limit=50&`).then(res => res.json()).then(json => {\n      setArtistList(json);\n    });\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), artist_list.map(artist => {\n      return /*#__PURE__*/_jsxDEV(Artist, {\n        artist_name: artist['name'],\n        artist_pic: artist['photo']\n      }, artist['id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pageButton\",\n        onClick: prevPage,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Page \", page]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pageButton\",\n        onClick: nextPage,\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ArtistList, \"iLJ/fsq6Yai0yHvUcOBotNv28Fc=\");\n_c = ArtistList;\nexport default ArtistList;\nvar _c;\n$RefreshReg$(_c, \"ArtistList\");","map":{"version":3,"names":["useEffect","useState","Artist","jsxDEV","_jsxDEV","Fragment","_Fragment","ArtistList","_s","artist_list","setArtistList","page","setPage","prevPage","nextPage","fetch","then","res","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","artist_name","artist_pic","className","onClick","_c","$RefreshReg$"],"sources":["/Users/mayabenziada/Home/spotify/src/components/ArtistList.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Artist from './Artist.js';\n\n\nfunction ArtistList() {\n\n    const [artist_list, setArtistList] = useState([]);\n    const [page, setPage] = useState(1);\n\n    function prevPage() {\n        if (page === 1) {\n            return;\n        }\n        setPage(page - 1);\n    }\n\n    function nextPage() {\n        setPage(page + 1);\n    }\n\n    useEffect(() => {\n        fetch(`http://localhost:8000/artists?page=${page}&limit=50&`)\n            .then(res => res.json())\n            .then(json => {\n                setArtistList(json);\n            })\n    }, [page]);\n\n    return (\n        <>\n            <div>Artists</div>\n            {\n                artist_list.map((artist) => {\n                    return <Artist artist_name={artist['name']} artist_pic={artist['photo']}  key={artist['id']} />;\n                })\n            }\n            <div className='pageDiv'>\n              <button className='pageButton' onClick={prevPage}>Previous Page</button>\n              <p>Page {page}</p>\n              <button className='pageButton' onClick={nextPage}>Next page</button>\n            </div>\n        </>\n    );\n}\n\nexport default ArtistList;\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnC,SAASY,QAAQA,CAAA,EAAG;IAChB,IAAIF,IAAI,KAAK,CAAC,EAAE;MACZ;IACJ;IACAC,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACrB;EAEA,SAASG,QAAQA,CAAA,EAAG;IAChBF,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACrB;EAEAX,SAAS,CAAC,MAAM;IACZe,KAAK,CAAE,sCAAqCJ,IAAK,YAAW,CAAC,CACxDK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACE,IAAI,IAAI;MACVR,aAAa,CAACQ,IAAI,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,oBACIP,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAEdd,WAAW,CAACe,GAAG,CAAEC,MAAM,IAAK;MACxB,oBAAOrB,OAAA,CAACF,MAAM;QAACwB,WAAW,EAAED,MAAM,CAAC,MAAM,CAAE;QAACE,UAAU,EAAEF,MAAM,CAAC,OAAO;MAAE,GAAOA,MAAM,CAAC,IAAI,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IACnG,CAAC,CAAC,eAENnB,OAAA;MAAKwB,SAAS,EAAC,SAAS;MAAAT,QAAA,gBACtBf,OAAA;QAAQwB,SAAS,EAAC,YAAY;QAACC,OAAO,EAAEhB,QAAS;QAAAM,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACxEnB,OAAA;QAAAe,QAAA,GAAG,OAAK,EAACR,IAAI;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBnB,OAAA;QAAQwB,SAAS,EAAC,YAAY;QAACC,OAAO,EAAEf,QAAS;QAAAK,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChE;EAAA,gBACP;AAEX;AAACf,EAAA,CAvCQD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAyCnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}